{{#extend "scripts"}}
{{/extend}}
{{#extend "stylesheets"}}
{{/extend}}

<script>
    var geoData = {{{data}}};
</script>

<div id="map" style="height:500px ;" class= 'd-flex justify-content-center'>
   <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC9nbhtbGeolVY2g-PckOOSnfe3Fabea0w&v=weekly&channel=2"></script>
</div>


<script>
    let markers = [];
    let windowOpen = false;
    const im = 'locationmarker.png'
    function initMap(geoData) {
        map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 41.850033, lng: -87.6500523},
            zoom: 17,
            gestureHandling: "cooperative",
        });
        map.data.addGeoJson(geoData);
        map.data.setStyle({
            strokeColor: 'blue'});
        //set current position
        
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                addMarker(new google.maps.LatLng(position.coords.latitude, position.coords.longitude));
                initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                map.setCenter(initialLocation);
            });
        }
        //info windows
        const infoWindow = new google.maps.InfoWindow();
        const locationButton = document.createElement('button');
        locationButton.textContent = 'Pan to Current Location';
        locationButton.classList.add('custom-map-control-button');
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);

        map.data.addListener('click', function(event) {
            const feat = event.feature;
            const html = `<div class="card" style="width: 18rem;">
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item"> <bold>Species: </bold>${feat.getProperty('englishName')}</li>
                                <li class="list-group-item"><bold>Date: </bold>${feat.getProperty('date').slice(0,10)}</li>
                                <li class="list-group-item"><bold>Logged By: </bold>${feat.getProperty('userName')}</li>
                            </ul>
                        </div>`
            infoWindow.setContent(html);
            infoWindow.setPosition(event.latLng);
            infoWindow.setOptions({pixelOffset: new google.maps.Size(0, -34)});
            infoWindow.open(map);
            windowOpen = true;
        });
        infoWindow.addListener('closeclick', ()=>{
            infoWindow.close(map);
            windowOpen = false
        });

        // pan to location button
        locationButton.addEventListener('click', () => {
            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                        };
                        infoWindow.setPosition(pos);
                        infoWindow.setContent('Location found.');
                        infoWindow.open(map);
                        map.setCenter(pos);
                    },
                    () => {
                        handleLocationError(true, infoWindow, map.getCenter());
                    },
                );
            } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
            }
        });
    }; 
    initMap(geoData);

    function setMapOnAll(map) {
        for (let i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }

    function hideMarkers() {
        setMapOnAll(null);
    }

    function deleteMarkers() {
        hideMarkers();
        markers = [];
    }

    function addMarker(position) {
        var im = 'locationmarker.png'
        const marker = new google.maps.Marker({
            position,
            map,
            icon: im,
        });

        markers.push(marker);
    }
    function updateLocation() {
        if(!windowOpen){
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    deleteMarkers();
                    addMarker(new google.maps.LatLng(position.coords.latitude, position.coords.longitude));
                    initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                    map.setCenter(initialLocation);
                });
            }
        }
    }
    setInterval(updateLocation, 10000);
</script>